/*
 * Connections on the LCD:
 (8 - yellow)		: VLCD1, VLCD2 LCD supply voltage (+3.3 up to 5.0)
 (7 - blue)			: SCLK serial clock input, Input for the clock signal: 0.0 to 4.0 Mbits/s.
 (6 - green)			: SDIN serial data input, Input for the data line.
 (5 - purple)		: D/C data/command, MODE SELECT, Input to select either command/address or data input.
 (4 - gray)			: RES external reset input, This signal will reset the device and must be applied to properly initialize the chip. The signal is active LOW.
 (3 - orange)		: SCE chip enable, The enable pin allows data to be clocked in. The signal is active LOW.
 (2 - brown)			: VSS1, VSS2 ground
 (1 - red)			: VDD1, VDD2 supply voltage

 * on atmega128:
 *	(/SS): PB0 => SCE (3)
 *  (SCK): PB1 => SCLK (7)
 *  (MOSI): PB2 => SDIN (6)
 *  (MISO): PB3 not connected, ev. VLCD1 (8), but background light won't work.
 */

#include <avr/pgmspace.h>	// zeby bylo mozliwe PROGMEM

#define N5110_DDR		DDRB
#define N5110_PORT		PORTB
#define N5110_DC_SET	N5110_PORT = N5110_PORT | (1 << PB5)
#define N5110_DC_CLR	N5110_PORT = N5110_PORT & ~(1 << PB5)
#define N5110_RST_SET	N5110_PORT = N5110_PORT | (1 << PB4)
#define N5110_RST_CLR	N5110_PORT = N5110_PORT & ~(1 << PB4)
#define N5110_BL_SET	N5110_PORT = N5110_PORT | (1 << PB3)	// backlight (OC0A)
#define N5110_BL_CLR	N5110_PORT = N5110_PORT & ~(1 << PB3)
#define N5110_CE_SET	N5110_PORT = N5110_PORT | (1 << PB0)
#define N5110_CE_CLR	N5110_PORT = N5110_PORT & ~(1 << PB0)

PROGMEM static const unsigned char fonts[][5] =
	{
		{ 0x00, 0x00, 0x00, 0x00, 0x00 },          // sp
		{ 0x00, 0x00, 0x2f, 0x00, 0x00 },          // !
		{ 0x00, 0x07, 0x00, 0x07, 0x00 },          // "
		{ 0x14, 0x7f, 0x14, 0x7f, 0x14 },          // #
		{ 0x24, 0x2a, 0x7f, 0x2a, 0x12 },          // $
		{ 0xc4, 0xc8, 0x10, 0x26, 0x46 },          // %
		{ 0x36, 0x49, 0x55, 0x22, 0x50 },          // &
		{ 0x00, 0x05, 0x03, 0x00, 0x00 },          // '
		{ 0x00, 0x1c, 0x22, 0x41, 0x00 },          // (
		{ 0x00, 0x41, 0x22, 0x1c, 0x00 },          // )
		{ 0x14, 0x08, 0x3E, 0x08, 0x14 },          // *
		{ 0x08, 0x08, 0x3E, 0x08, 0x08 },          // +
		{ 0x00, 0x00, 0x50, 0x30, 0x00 },          // ,
		{ 0x10, 0x10, 0x10, 0x10, 0x10 },          // -
		{ 0x00, 0x60, 0x60, 0x00, 0x00 },          // .
		{ 0x20, 0x10, 0x08, 0x04, 0x02 },          // /
		{ 0x3E, 0x51, 0x49, 0x45, 0x3E },          // 0
		{ 0x00, 0x42, 0x7F, 0x40, 0x00 },          // 1
		{ 0x42, 0x61, 0x51, 0x49, 0x46 },          // 2
		{ 0x21, 0x41, 0x45, 0x4B, 0x31 },          // 3
		{ 0x18, 0x14, 0x12, 0x7F, 0x10 },          // 4
		{ 0x27, 0x45, 0x45, 0x45, 0x39 },          // 5
		{ 0x3C, 0x4A, 0x49, 0x49, 0x30 },          // 6
		{ 0x01, 0x71, 0x09, 0x05, 0x03 },          // 7
		{ 0x36, 0x49, 0x49, 0x49, 0x36 },          // 8
		{ 0x06, 0x49, 0x49, 0x29, 0x1E },          // 9
		{ 0x00, 0x36, 0x36, 0x00, 0x00 },          // :
		{ 0x00, 0x56, 0x36, 0x00, 0x00 },          // ;
		{ 0x08, 0x14, 0x22, 0x41, 0x00 },          // <
		{ 0x14, 0x14, 0x14, 0x14, 0x14 },          // =
		{ 0x00, 0x41, 0x22, 0x14, 0x08 },          // >
		{ 0x02, 0x01, 0x51, 0x09, 0x06 },          // ?
		{ 0x32, 0x49, 0x59, 0x51, 0x3E },          // @
		{ 0x7E, 0x11, 0x11, 0x11, 0x7E },          // A
		{ 0x7F, 0x49, 0x49, 0x49, 0x36 },          // B
		{ 0x3E, 0x41, 0x41, 0x41, 0x22 },          // C
		{ 0x7F, 0x41, 0x41, 0x22, 0x1C },          // D
		{ 0x7F, 0x49, 0x49, 0x49, 0x41 },          // E
		{ 0x7F, 0x09, 0x09, 0x09, 0x01 },          // F
		{ 0x3E, 0x41, 0x49, 0x49, 0x7A },          // G
		{ 0x7F, 0x08, 0x08, 0x08, 0x7F },          // H
		{ 0x00, 0x41, 0x7F, 0x41, 0x00 },          // I
		{ 0x20, 0x40, 0x41, 0x3F, 0x01 },          // J
		{ 0x7F, 0x08, 0x14, 0x22, 0x41 },          // K
		{ 0x7F, 0x40, 0x40, 0x40, 0x40 },          // L
		{ 0x7F, 0x02, 0x0C, 0x02, 0x7F },          // M
		{ 0x7F, 0x04, 0x08, 0x10, 0x7F },          // N
		{ 0x3E, 0x41, 0x41, 0x41, 0x3E },          // O
		{ 0x7F, 0x09, 0x09, 0x09, 0x06 },          // P
		{ 0x3E, 0x41, 0x51, 0x21, 0x5E },          // Q
		{ 0x7F, 0x09, 0x19, 0x29, 0x46 },          // R
		{ 0x46, 0x49, 0x49, 0x49, 0x31 },          // S
		{ 0x01, 0x01, 0x7F, 0x01, 0x01 },          // T
		{ 0x3F, 0x40, 0x40, 0x40, 0x3F },          // U
		{ 0x1F, 0x20, 0x40, 0x20, 0x1F },          // V
		{ 0x3F, 0x40, 0x38, 0x40, 0x3F },          // W
		{ 0x63, 0x14, 0x08, 0x14, 0x63 },          // X
		{ 0x07, 0x08, 0x70, 0x08, 0x07 },          // Y
		{ 0x61, 0x51, 0x49, 0x45, 0x43 },          // Z
		{ 0x00, 0x7F, 0x41, 0x41, 0x00 },          // [
		{ 0x55, 0x2A, 0x55, 0x2A, 0x55 },          // 55
		{ 0x00, 0x41, 0x41, 0x7F, 0x00 },          // ]
		{ 0x04, 0x02, 0x01, 0x02, 0x04 },          // ^
		{ 0x40, 0x40, 0x40, 0x40, 0x40 },          // _
		{ 0x00, 0x01, 0x02, 0x04, 0x00 },          // '
		{ 0x20, 0x54, 0x54, 0x54, 0x78 },          // a
		{ 0x7F, 0x48, 0x44, 0x44, 0x38 },          // b
		{ 0x38, 0x44, 0x44, 0x44, 0x20 },          // c
		{ 0x38, 0x44, 0x44, 0x48, 0x7F },          // d
		{ 0x38, 0x54, 0x54, 0x54, 0x18 },          // e
		{ 0x08, 0x7E, 0x09, 0x01, 0x02 },          // f
		{ 0x0C, 0x52, 0x52, 0x52, 0x3E },          // g
		{ 0x7F, 0x08, 0x04, 0x04, 0x78 },          // h
		{ 0x00, 0x44, 0x7D, 0x40, 0x00 },          // i
		{ 0x20, 0x40, 0x44, 0x3D, 0x00 },          // j
		{ 0x7F, 0x10, 0x28, 0x44, 0x00 },          // k
		{ 0x00, 0x41, 0x7F, 0x40, 0x00 },          // l
		{ 0x7C, 0x04, 0x18, 0x04, 0x78 },          // m
		{ 0x7C, 0x08, 0x04, 0x04, 0x78 },          // n
		{ 0x38, 0x44, 0x44, 0x44, 0x38 },          // o
		{ 0x7C, 0x14, 0x14, 0x14, 0x08 },          // p
		{ 0x08, 0x14, 0x14, 0x18, 0x7C },          // q
		{ 0x7C, 0x08, 0x04, 0x04, 0x08 },          // r
		{ 0x48, 0x54, 0x54, 0x54, 0x20 },          // s
		{ 0x04, 0x3F, 0x44, 0x40, 0x20 },          // t
		{ 0x3C, 0x40, 0x40, 0x20, 0x7C },          // u
		{ 0x1C, 0x20, 0x40, 0x20, 0x1C },          // v
		{ 0x3C, 0x40, 0x30, 0x40, 0x3C },          // w
		{ 0x44, 0x28, 0x10, 0x28, 0x44 },          // x
		{ 0x0C, 0x50, 0x50, 0x50, 0x3C },          // y
		{ 0x44, 0x64, 0x54, 0x4C, 0x44 },          // z
		{ 0x18, 0x3C, 0x3C, 0x7F, 0xFF },          // {
		{ 0xFF, 0x00, 0x00, 0x00, 0x00 },          // |
		{ 0xFF, 0xFF, 0x7E, 0x3C, 0x18 },          // }

		};

PROGMEM static const unsigned char Terminal6x8[96][5] =
	{
		{ 0x00, 0x00, 0x00, 0x00, 0x00 },          // Code for char
		{ 0x00, 0x06, 0x5F, 0x06, 0x00 },          // Code for char !
		{ 0x07, 0x03, 0x00, 0x07, 0x03 },          // Code for char "
		{ 0x24, 0x7E, 0x24, 0x7E, 0x24 },          // Code for char #
		{ 0x24, 0x2B, 0x6A, 0x12, 0x00 },          // Code for char $
		{ 0x63, 0x13, 0x08, 0x64, 0x63 },          // Code for char %
		{ 0x36, 0x49, 0x56, 0x20, 0x50 },          // Code for char &
		{ 0x00, 0x07, 0x03, 0x00, 0x00 },          // Code for char '
		{ 0x00, 0x3E, 0x41, 0x00, 0x00 },          // Code for char (
		{ 0x00, 0x41, 0x3E, 0x00, 0x00 },          // Code for char )
		{ 0x08, 0x3E, 0x1C, 0x3E, 0x08 },          // Code for char *
		{ 0x08, 0x08, 0x3E, 0x08, 0x08 },          // Code for char +
		{ 0x00, 0xE0, 0x60, 0x00, 0x00 },          // Code for char ,
		{ 0x08, 0x08, 0x08, 0x08, 0x08 },          // Code for char -
		{ 0x00, 0x60, 0x60, 0x00, 0x00 },          // Code for char .
		{ 0x20, 0x10, 0x08, 0x04, 0x02 },          // Code for char /
		{ 0x3E, 0x51, 0x49, 0x45, 0x3E },          // Code for char 0
		{ 0x00, 0x42, 0x7F, 0x40, 0x00 },          // Code for char 1
		{ 0x62, 0x51, 0x49, 0x49, 0x46 },          // Code for char 2
		{ 0x22, 0x49, 0x49, 0x49, 0x36 },          // Code for char 3
		{ 0x18, 0x14, 0x12, 0x7F, 0x10 },          // Code for char 4
		{ 0x2F, 0x49, 0x49, 0x49, 0x31 },          // Code for char 5
		{ 0x3C, 0x4A, 0x49, 0x49, 0x30 },          // Code for char 6
		{ 0x01, 0x71, 0x09, 0x05, 0x03 },          // Code for char 7
		{ 0x36, 0x49, 0x49, 0x49, 0x36 },          // Code for char 8
		{ 0x06, 0x49, 0x49, 0x29, 0x1E },          // Code for char 9
		{ 0x00, 0x6C, 0x6C, 0x00, 0x00 },          // Code for char :
		{ 0x00, 0xEC, 0x6C, 0x00, 0x00 },          // Code for char ;
		{ 0x08, 0x14, 0x22, 0x41, 0x00 },          // Code for char <
		{ 0x24, 0x24, 0x24, 0x24, 0x24 },          // Code for char =
		{ 0x00, 0x41, 0x22, 0x14, 0x08 },          // Code for char >
		{ 0x02, 0x01, 0x59, 0x09, 0x06 },          // Code for char ?
		{ 0x3E, 0x41, 0x5D, 0x55, 0x1E },          // Code for char @
		{ 0x7E, 0x11, 0x11, 0x11, 0x7E },          // Code for char A
		{ 0x7F, 0x49, 0x49, 0x49, 0x36 },          // Code for char B
		{ 0x3E, 0x41, 0x41, 0x41, 0x22 },          // Code for char C
		{ 0x7F, 0x41, 0x41, 0x41, 0x3E },          // Code for char D
		{ 0x7F, 0x49, 0x49, 0x49, 0x41 },          // Code for char E
		{ 0x7F, 0x09, 0x09, 0x09, 0x01 },          // Code for char F
		{ 0x3E, 0x41, 0x49, 0x49, 0x7A },          // Code for char G
		{ 0x7F, 0x08, 0x08, 0x08, 0x7F },          // Code for char H
		{ 0x00, 0x41, 0x7F, 0x41, 0x00 },          // Code for char I
		{ 0x30, 0x40, 0x40, 0x40, 0x3F },          // Code for char J
		{ 0x7F, 0x08, 0x14, 0x22, 0x41 },          // Code for char K
		{ 0x7F, 0x40, 0x40, 0x40, 0x40 },          // Code for char L
		{ 0x7F, 0x02, 0x04, 0x02, 0x7F },          // Code for char M
		{ 0x7F, 0x02, 0x04, 0x08, 0x7F },          // Code for char N
		{ 0x3E, 0x41, 0x41, 0x41, 0x3E },          // Code for char O
		{ 0x7F, 0x09, 0x09, 0x09, 0x06 },          // Code for char P
		{ 0x3E, 0x41, 0x51, 0x21, 0x5E },          // Code for char Q
		{ 0x7F, 0x09, 0x09, 0x19, 0x66 },          // Code for char R
		{ 0x26, 0x49, 0x49, 0x49, 0x32 },          // Code for char S
		{ 0x01, 0x01, 0x7F, 0x01, 0x01 },          // Code for char T
		{ 0x3F, 0x40, 0x40, 0x40, 0x3F },          // Code for char U
		{ 0x1F, 0x20, 0x40, 0x20, 0x1F },          // Code for char V
		{ 0x3F, 0x40, 0x3C, 0x40, 0x3F },          // Code for char W
		{ 0x63, 0x14, 0x08, 0x14, 0x63 },          // Code for char X
		{ 0x07, 0x08, 0x70, 0x08, 0x07 },          // Code for char Y
		{ 0x71, 0x49, 0x45, 0x43, 0x00 },          // Code for char Z
		{ 0x00, 0x7F, 0x41, 0x41, 0x00 },          // Code for char [
		{ 0x02, 0x04, 0x08, 0x10, 0x20 },          // Code for <BackSlash>
		{ 0x00, 0x41, 0x41, 0x7F, 0x00 },          // Code for char ]
		{ 0x04, 0x02, 0x01, 0x02, 0x04 },          // Code for char ^
		{ 0x80, 0x80, 0x80, 0x80, 0x80 },          // Code for char _
		{ 0x00, 0x03, 0x07, 0x00, 0x00 },          // Code for char `
		{ 0x20, 0x54, 0x54, 0x54, 0x78 },          // Code for char a
		{ 0x7F, 0x44, 0x44, 0x44, 0x38 },          // Code for char b
		{ 0x38, 0x44, 0x44, 0x44, 0x28 },          // Code for char c
		{ 0x38, 0x44, 0x44, 0x44, 0x7F },          // Code for char d
		{ 0x38, 0x54, 0x54, 0x54, 0x08 },          // Code for char e
		{ 0x08, 0x7E, 0x09, 0x09, 0x00 },          // Code for char f
		{ 0x18, 0xA4, 0xA4, 0xA4, 0x7C },          // Code for char g
		{ 0x7F, 0x04, 0x04, 0x78, 0x00 },          // Code for char h
		{ 0x00, 0x00, 0x7D, 0x40, 0x00 },          // Code for char i
		{ 0x40, 0x80, 0x84, 0x7D, 0x00 },          // Code for char j
		{ 0x7F, 0x10, 0x28, 0x44, 0x00 },          // Code for char k
		{ 0x00, 0x00, 0x7F, 0x40, 0x00 },          // Code for char l
		{ 0x7C, 0x04, 0x18, 0x04, 0x78 },          // Code for char m
		{ 0x7C, 0x04, 0x04, 0x78, 0x00 },          // Code for char n
		{ 0x38, 0x44, 0x44, 0x44, 0x38 },          // Code for char o
		{ 0xFC, 0x44, 0x44, 0x44, 0x38 },          // Code for char p
		{ 0x38, 0x44, 0x44, 0x44, 0xFC },          // Code for char q
		{ 0x44, 0x78, 0x44, 0x04, 0x08 },          // Code for char r
		{ 0x08, 0x54, 0x54, 0x54, 0x20 },          // Code for char s
		{ 0x04, 0x3E, 0x44, 0x24, 0x00 },          // Code for char t
		{ 0x3C, 0x40, 0x20, 0x7C, 0x00 },          // Code for char u
		{ 0x1C, 0x20, 0x40, 0x20, 0x1C },          // Code for char v
		{ 0x3C, 0x60, 0x30, 0x60, 0x3C },          // Code for char w
		{ 0x6C, 0x10, 0x10, 0x6C, 0x00 },          // Code for char x
		{ 0x9C, 0xA0, 0x60, 0x3C, 0x00 },          // Code for char y
		{ 0x64, 0x54, 0x54, 0x4C, 0x00 },          // Code for char z
		{ 0x08, 0x3E, 0x41, 0x41, 0x00 },          // Code for char {
		{ 0x00, 0x00, 0x77, 0x00, 0x00 },          // Code for char |
		{ 0x00, 0x41, 0x41, 0x3E, 0x08 },          // Code for char }
		{ 0x02, 0x01, 0x02, 0x01, 0x00 },          // Code for char ~
		{ 0x06, 0x09, 0x09, 0x06, 0x00 }          // Code for <Degrees>
	};

PROGMEM static const unsigned char Terminal11x16[96][22] =
			{
				{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },          // Code for char
				{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0x00, 0xFF, 0x33, 0xFF, 0x33, 0x7C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },          // Code for char !
				{ 0x00, 0x00, 0x00, 0x00, 0x3C, 0x00, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x00, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },          // Code for char "
				{ 0x00, 0x02, 0x10, 0x1E, 0x90, 0x1F, 0xF0, 0x03, 0x7E, 0x02, 0x1E, 0x1E, 0x90, 0x1F, 0xF0, 0x03, 0x7E, 0x02, 0x1E, 0x00, 0x10, 0x00 },          // Code for char #
				{ 0x00, 0x00, 0x78, 0x04, 0xFC, 0x0C, 0xCC, 0x0C, 0xFF, 0x3F, 0xFF, 0x3F, 0xCC, 0x0C, 0xCC, 0x0F, 0x88, 0x07, 0x00, 0x00, 0x00, 0x00 },          // Code for char $
				{ 0x00, 0x30, 0x38, 0x38, 0x38, 0x1C, 0x38, 0x0E, 0x00, 0x07, 0x80, 0x03, 0xC0, 0x01, 0xE0, 0x38, 0x70, 0x38, 0x38, 0x38, 0x1C, 0x00 },          // Code for char %
				{ 0x00, 0x00, 0x00, 0x1F, 0xB8, 0x3F, 0xFC, 0x31, 0xC6, 0x21, 0xE2, 0x37, 0x3E, 0x1E, 0x1C, 0x1C, 0x00, 0x36, 0x00, 0x22, 0x00, 0x00 },          // Code for char &
				{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x27, 0x00, 0x3F, 0x00, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },          // Code for char '
				{ 0x00, 0x00, 0x00, 0x00, 0xF0, 0x03, 0xFC, 0x0F, 0xFE, 0x1F, 0x07, 0x38, 0x01, 0x20, 0x01, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },          // Code for char (
				{ 0x00, 0x00, 0x00, 0x00, 0x01, 0x20, 0x01, 0x20, 0x07, 0x38, 0xFE, 0x1F, 0xFC, 0x0F, 0xF0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },          // Code for char )
				{ 0x00, 0x00, 0x98, 0x0C, 0xB8, 0x0E, 0xE0, 0x03, 0xF8, 0x0F, 0xF8, 0x0F, 0xE0, 0x03, 0xB8, 0x0E, 0x98, 0x0C, 0x00, 0x00, 0x00, 0x00 },          // Code for char *
				{ 0x00, 0x00, 0x80, 0x01, 0x80, 0x01, 0x80, 0x01, 0xF0, 0x0F, 0xF0, 0x0F, 0x80, 0x01, 0x80, 0x01, 0x80, 0x01, 0x00, 0x00, 0x00, 0x00 },          // Code for char +
				{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xB8, 0x00, 0xF8, 0x00, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },          // Code for char ,
				{ 0x00, 0x00, 0x80, 0x01, 0x80, 0x01, 0x80, 0x01, 0x80, 0x01, 0x80, 0x01, 0x80, 0x01, 0x80, 0x01, 0x80, 0x01, 0x00, 0x00, 0x00, 0x00 },          // Code for char -
				{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },          // Code for char .
				{ 0x00, 0x18, 0x00, 0x1C, 0x00, 0x0E, 0x00, 0x07, 0x80, 0x03, 0xC0, 0x01, 0xE0, 0x00, 0x70, 0x00, 0x38, 0x00, 0x1C, 0x00, 0x0E, 0x00 },          // Code for char /
				{ 0xF8, 0x07, 0xFE, 0x1F, 0x06, 0x1E, 0x03, 0x33, 0x83, 0x31, 0xC3, 0x30, 0x63, 0x30, 0x33, 0x30, 0x1E, 0x18, 0xFE, 0x1F, 0xF8, 0x07 },          // Code for char 0
				{ 0x00, 0x00, 0x00, 0x00, 0x0C, 0x30, 0x0C, 0x30, 0x0E, 0x30, 0xFF, 0x3F, 0xFF, 0x3F, 0x00, 0x30, 0x00, 0x30, 0x00, 0x30, 0x00, 0x00 },          // Code for char 1
				{ 0x1C, 0x30, 0x1E, 0x38, 0x07, 0x3C, 0x03, 0x3E, 0x03, 0x37, 0x83, 0x33, 0xC3, 0x31, 0xE3, 0x30, 0x77, 0x30, 0x3E, 0x30, 0x1C, 0x30 },          // Code for char 2
				{ 0x0C, 0x0C, 0x0E, 0x1C, 0x07, 0x38, 0xC3, 0x30, 0xC3, 0x30, 0xC3, 0x30, 0xC3, 0x30, 0xC3, 0x30, 0xE7, 0x39, 0x7E, 0x1F, 0x3C, 0x0E },          // Code for char 3
				{ 0xC0, 0x03, 0xE0, 0x03, 0x70, 0x03, 0x38, 0x03, 0x1C, 0x03, 0x0E, 0x03, 0x07, 0x03, 0xFF, 0x3F, 0xFF, 0x3F, 0x00, 0x03, 0x00, 0x03 },          // Code for char 4
				{ 0x3F, 0x0C, 0x7F, 0x1C, 0x63, 0x38, 0x63, 0x30, 0x63, 0x30, 0x63, 0x30, 0x63, 0x30, 0x63, 0x30, 0xE3, 0x38, 0xC3, 0x1F, 0x83, 0x0F },          // Code for char 5
				{ 0xC0, 0x0F, 0xF0, 0x1F, 0xF8, 0x39, 0xDC, 0x30, 0xCE, 0x30, 0xC7, 0x30, 0xC3, 0x30, 0xC3, 0x30, 0xC3, 0x39, 0x80, 0x1F, 0x00, 0x0F },          // Code for char 6
				{ 0x03, 0x00, 0x03, 0x00, 0x03, 0x00, 0x03, 0x30, 0x03, 0x3C, 0x03, 0x0F, 0xC3, 0x03, 0xF3, 0x00, 0x3F, 0x00, 0x0F, 0x00, 0x03, 0x00 },          // Code for char 7
				{ 0x00, 0x0F, 0xBC, 0x1F, 0xFE, 0x39, 0xE7, 0x30, 0xC3, 0x30, 0xC3, 0x30, 0xC3, 0x30, 0xE7, 0x30, 0xFE, 0x39, 0xBC, 0x1F, 0x00, 0x0F },          // Code for char 8
				{ 0x3C, 0x00, 0x7E, 0x00, 0xE7, 0x30, 0xC3, 0x30, 0xC3, 0x30, 0xC3, 0x38, 0xC3, 0x1C, 0xC3, 0x0E, 0xE7, 0x07, 0xFE, 0x03, 0xFC, 0x00 },          // Code for char 9
				{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x1C, 0x70, 0x1C, 0x70, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },          // Code for char :
				{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x9C, 0x70, 0xFC, 0x70, 0x7C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },          // Code for char ;
				{ 0x00, 0x00, 0xC0, 0x00, 0xE0, 0x01, 0xF0, 0x03, 0x38, 0x07, 0x1C, 0x0E, 0x0E, 0x1C, 0x07, 0x38, 0x03, 0x30, 0x00, 0x00, 0x00, 0x00 },          // Code for char <
				{ 0x00, 0x00, 0x60, 0x06, 0x60, 0x06, 0x60, 0x06, 0x60, 0x06, 0x60, 0x06, 0x60, 0x06, 0x60, 0x06, 0x60, 0x06, 0x60, 0x06, 0x00, 0x00 },          // Code for char =
				{ 0x00, 0x00, 0x03, 0x30, 0x07, 0x38, 0x0E, 0x1C, 0x1C, 0x0E, 0x38, 0x07, 0xF0, 0x03, 0xE0, 0x01, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00 },          // Code for char >
				{ 0x1C, 0x00, 0x1E, 0x00, 0x07, 0x00, 0x03, 0x00, 0x83, 0x37, 0xC3, 0x37, 0xE3, 0x00, 0x77, 0x00, 0x3E, 0x00, 0x1C, 0x00, 0x00, 0x00 },          // Code for char ?
				{ 0xF8, 0x0F, 0xFE, 0x1F, 0x07, 0x18, 0xF3, 0x33, 0xFB, 0x37, 0x1B, 0x36, 0xFB, 0x37, 0xFB, 0x37, 0x07, 0x36, 0xFE, 0x03, 0xF8, 0x01 },          // Code for char @
				{ 0x00, 0x38, 0x00, 0x3F, 0xE0, 0x07, 0xFC, 0x06, 0x1F, 0x06, 0x1F, 0x06, 0xFC, 0x06, 0xE0, 0x07, 0x00, 0x3F, 0x00, 0x38, 0x00, 0x00 },          // Code for char A
				{ 0xFF, 0x3F, 0xFF, 0x3F, 0xC3, 0x30, 0xC3, 0x30, 0xC3, 0x30, 0xC3, 0x30, 0xE7, 0x30, 0xFE, 0x39, 0xBC, 0x1F, 0x00, 0x0F, 0x00, 0x00 },          // Code for char B
				{ 0xF0, 0x03, 0xFC, 0x0F, 0x0E, 0x1C, 0x07, 0x38, 0x03, 0x30, 0x03, 0x30, 0x03, 0x30, 0x07, 0x38, 0x0E, 0x1C, 0x0C, 0x0C, 0x00, 0x00 },          // Code for char C
				{ 0xFF, 0x3F, 0xFF, 0x3F, 0x03, 0x30, 0x03, 0x30, 0x03, 0x30, 0x03, 0x30, 0x07, 0x38, 0x0E, 0x1C, 0xFC, 0x0F, 0xF0, 0x03, 0x00, 0x00 },          // Code for char D
				{ 0xFF, 0x3F, 0xFF, 0x3F, 0xC3, 0x30, 0xC3, 0x30, 0xC3, 0x30, 0xC3, 0x30, 0xC3, 0x30, 0xC3, 0x30, 0x03, 0x30, 0x03, 0x30, 0x00, 0x00 },          // Code for char E
				{ 0xFF, 0x3F, 0xFF, 0x3F, 0xC3, 0x00, 0xC3, 0x00, 0xC3, 0x00, 0xC3, 0x00, 0xC3, 0x00, 0xC3, 0x00, 0x03, 0x00, 0x03, 0x00, 0x00, 0x00 },          // Code for char F
				{ 0xF0, 0x03, 0xFC, 0x0F, 0x0E, 0x1C, 0x07, 0x38, 0x03, 0x30, 0xC3, 0x30, 0xC3, 0x30, 0xC3, 0x30, 0xC7, 0x3F, 0xC6, 0x3F, 0x00, 0x00 },          // Code for char G
				{ 0xFF, 0x3F, 0xFF, 0x3F, 0xC0, 0x00, 0xC0, 0x00, 0xC0, 0x00, 0xC0, 0x00, 0xC0, 0x00, 0xC0, 0x00, 0xFF, 0x3F, 0xFF, 0x3F, 0x00, 0x00 },          // Code for char H
				{ 0x00, 0x00, 0x00, 0x00, 0x03, 0x30, 0x03, 0x30, 0xFF, 0x3F, 0xFF, 0x3F, 0x03, 0x30, 0x03, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },          // Code for char I
				{ 0x00, 0x0E, 0x00, 0x1E, 0x00, 0x38, 0x00, 0x30, 0x00, 0x30, 0x00, 0x30, 0x00, 0x30, 0x00, 0x38, 0xFF, 0x1F, 0xFF, 0x07, 0x00, 0x00 },          // Code for char J
				{ 0xFF, 0x3F, 0xFF, 0x3F, 0xC0, 0x00, 0xE0, 0x01, 0xF0, 0x03, 0x38, 0x07, 0x1C, 0x0E, 0x0E, 0x1C, 0x07, 0x38, 0x03, 0x30, 0x00, 0x00 },          // Code for char K
				{ 0xFF, 0x3F, 0xFF, 0x3F, 0x00, 0x30, 0x00, 0x30, 0x00, 0x30, 0x00, 0x30, 0x00, 0x30, 0x00, 0x30, 0x00, 0x30, 0x00, 0x30, 0x00, 0x00 },          // Code for char L
				{ 0xFF, 0x3F, 0xFF, 0x3F, 0x1E, 0x00, 0x78, 0x00, 0xE0, 0x01, 0xE0, 0x01, 0x78, 0x00, 0x1E, 0x00, 0xFF, 0x3F, 0xFF, 0x3F, 0x00, 0x00 },          // Code for char M
				{ 0xFF, 0x3F, 0xFF, 0x3F, 0x0E, 0x00, 0x38, 0x00, 0xF0, 0x00, 0xC0, 0x03, 0x00, 0x07, 0x00, 0x1C, 0xFF, 0x3F, 0xFF, 0x3F, 0x00, 0x00 },          // Code for char N
				{ 0xF0, 0x03, 0xFC, 0x0F, 0x0E, 0x1C, 0x07, 0x38, 0x03, 0x30, 0x03, 0x30, 0x07, 0x38, 0x0E, 0x1C, 0xFC, 0x0F, 0xF0, 0x03, 0x00, 0x00 },          // Code for char O
				{ 0xFF, 0x3F, 0xFF, 0x3F, 0x83, 0x01, 0x83, 0x01, 0x83, 0x01, 0x83, 0x01, 0x83, 0x01, 0xC7, 0x01, 0xFE, 0x00, 0x7C, 0x00, 0x00, 0x00 },          // Code for char P
				{ 0xF0, 0x03, 0xFC, 0x0F, 0x0E, 0x1C, 0x07, 0x38, 0x03, 0x30, 0x03, 0x36, 0x07, 0x3E, 0x0E, 0x1C, 0xFC, 0x3F, 0xF0, 0x33, 0x00, 0x00 },          // Code for char Q
				{ 0xFF, 0x3F, 0xFF, 0x3F, 0x83, 0x01, 0x83, 0x01, 0x83, 0x03, 0x83, 0x07, 0x83, 0x0F, 0xC7, 0x1D, 0xFE, 0x38, 0x7C, 0x30, 0x00, 0x00 },          // Code for char R
				{ 0x3C, 0x0C, 0x7E, 0x1C, 0xE7, 0x38, 0xC3, 0x30, 0xC3, 0x30, 0xC3, 0x30, 0xC3, 0x30, 0xC7, 0x39, 0x8E, 0x1F, 0x0C, 0x0F, 0x00, 0x00 },          // Code for char S
				{ 0x00, 0x00, 0x03, 0x00, 0x03, 0x00, 0x03, 0x00, 0xFF, 0x3F, 0xFF, 0x3F, 0x03, 0x00, 0x03, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00 },          // Code for char T
				{ 0xFF, 0x07, 0xFF, 0x1F, 0x00, 0x38, 0x00, 0x30, 0x00, 0x30, 0x00, 0x30, 0x00, 0x30, 0x00, 0x38, 0xFF, 0x1F, 0xFF, 0x07, 0x00, 0x00 },          // Code for char U
				{ 0x07, 0x00, 0x3F, 0x00, 0xF8, 0x01, 0xC0, 0x0F, 0x00, 0x3E, 0x00, 0x3E, 0xC0, 0x0F, 0xF8, 0x01, 0x3F, 0x00, 0x07, 0x00, 0x00, 0x00 },          // Code for char V
				{ 0xFF, 0x3F, 0xFF, 0x3F, 0x00, 0x1C, 0x00, 0x06, 0x80, 0x03, 0x80, 0x03, 0x00, 0x06, 0x00, 0x1C, 0xFF, 0x3F, 0xFF, 0x3F, 0x00, 0x00 },          // Code for char W
				{ 0x03, 0x30, 0x0F, 0x3C, 0x1C, 0x0E, 0x30, 0x03, 0xE0, 0x01, 0xE0, 0x01, 0x30, 0x03, 0x1C, 0x0E, 0x0F, 0x3C, 0x03, 0x30, 0x00, 0x00 },          // Code for char X
				{ 0x03, 0x00, 0x0F, 0x00, 0x3C, 0x00, 0xF0, 0x00, 0xC0, 0x3F, 0xC0, 0x3F, 0xF0, 0x00, 0x3C, 0x00, 0x0F, 0x00, 0x03, 0x00, 0x00, 0x00 },          // Code for char Y
				{ 0x03, 0x30, 0x03, 0x3C, 0x03, 0x3E, 0x03, 0x33, 0xC3, 0x31, 0xE3, 0x30, 0x33, 0x30, 0x1F, 0x30, 0x0F, 0x30, 0x03, 0x30, 0x00, 0x00 },          // Code for char Z
				{ 0x00, 0x00, 0x00, 0x00, 0xFF, 0x3F, 0xFF, 0x3F, 0x03, 0x30, 0x03, 0x30, 0x03, 0x30, 0x03, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },          // Code for char [
				{ 0x0E, 0x00, 0x1C, 0x00, 0x38, 0x00, 0x70, 0x00, 0xE0, 0x00, 0xC0, 0x01, 0x80, 0x03, 0x00, 0x07, 0x00, 0x0E, 0x00, 0x1C, 0x00, 0x18 },          // Code for <Backslash>
				{ 0x00, 0x00, 0x00, 0x00, 0x03, 0x30, 0x03, 0x30, 0x03, 0x30, 0x03, 0x30, 0xFF, 0x3F, 0xFF, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },          // Code for char ]
				{ 0x60, 0x00, 0x70, 0x00, 0x38, 0x00, 0x1C, 0x00, 0x0E, 0x00, 0x07, 0x00, 0x0E, 0x00, 0x1C, 0x00, 0x38, 0x00, 0x70, 0x00, 0x60, 0x00 },          // Code for char ^
				{ 0x00, 0xC0, 0x00, 0xC0, 0x00, 0xC0, 0x00, 0xC0, 0x00, 0xC0, 0x00, 0xC0, 0x00, 0xC0, 0x00, 0xC0, 0x00, 0xC0, 0x00, 0xC0, 0x00, 0xC0 },          // Code for char _
				{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3E, 0x00, 0x7E, 0x00, 0x4E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },          // Code for char `
				{ 0x00, 0x1C, 0x40, 0x3E, 0x60, 0x33, 0x60, 0x33, 0x60, 0x33, 0x60, 0x33, 0x60, 0x33, 0x60, 0x33, 0xE0, 0x3F, 0xC0, 0x3F, 0x00, 0x00 },          // Code for char a
				{ 0xFF, 0x3F, 0xFF, 0x3F, 0xC0, 0x30, 0x60, 0x30, 0x60, 0x30, 0x60, 0x30, 0x60, 0x30, 0xE0, 0x38, 0xC0, 0x1F, 0x80, 0x0F, 0x00, 0x00 },          // Code for char b
				{ 0x80, 0x0F, 0xC0, 0x1F, 0xE0, 0x38, 0x60, 0x30, 0x60, 0x30, 0x60, 0x30, 0x60, 0x30, 0x60, 0x30, 0xC0, 0x18, 0x80, 0x08, 0x00, 0x00 },          // Code for char c
				{ 0x80, 0x0F, 0xC0, 0x1F, 0xE0, 0x38, 0x60, 0x30, 0x60, 0x30, 0x60, 0x30, 0xE0, 0x30, 0xC0, 0x30, 0xFF, 0x3F, 0xFF, 0x3F, 0x00, 0x00 },          // Code for char d
				{ 0x80, 0x0F, 0xC0, 0x1F, 0xE0, 0x3B, 0x60, 0x33, 0x60, 0x33, 0x60, 0x33, 0x60, 0x33, 0x60, 0x33, 0xC0, 0x13, 0x80, 0x01, 0x00, 0x00 },          // Code for char e
				{ 0xC0, 0x00, 0xC0, 0x00, 0xFC, 0x3F, 0xFE, 0x3F, 0xC7, 0x00, 0xC3, 0x00, 0xC3, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },          // Code for char f
				{ 0x80, 0x03, 0xC0, 0xC7, 0xE0, 0xCE, 0x60, 0xCC, 0x60, 0xCC, 0x60, 0xCC, 0x60, 0xCC, 0x60, 0xE6, 0xE0, 0x7F, 0xE0, 0x3F, 0x00, 0x00 },          // Code for char g
				{ 0xFF, 0x3F, 0xFF, 0x3F, 0xC0, 0x00, 0x60, 0x00, 0x60, 0x00, 0x60, 0x00, 0xE0, 0x00, 0xC0, 0x3F, 0x80, 0x3F, 0x00, 0x00, 0x00, 0x00 },          // Code for char h
				{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x60, 0x30, 0xEC, 0x3F, 0xEC, 0x3F, 0x00, 0x30, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },          // Code for char i
				{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0xE0, 0x00, 0xC0, 0x60, 0xC0, 0xEC, 0xFF, 0xEC, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },          // Code for char j
				{ 0x00, 0x00, 0xFF, 0x3F, 0xFF, 0x3F, 0x00, 0x03, 0x80, 0x07, 0xC0, 0x0F, 0xE0, 0x1C, 0x60, 0x38, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00 },          // Code for char k
				{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x03, 0x30, 0xFF, 0x3F, 0xFF, 0x3F, 0x00, 0x30, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },          // Code for char l
				{ 0xE0, 0x3F, 0xC0, 0x3F, 0xE0, 0x00, 0xE0, 0x00, 0xC0, 0x3F, 0xC0, 0x3F, 0xE0, 0x00, 0xE0, 0x00, 0xC0, 0x3F, 0x80, 0x3F, 0x00, 0x00 },          // Code for char m
				{ 0x00, 0x00, 0xE0, 0x3F, 0xE0, 0x3F, 0x60, 0x00, 0x60, 0x00, 0x60, 0x00, 0x60, 0x00, 0xE0, 0x00, 0xC0, 0x3F, 0x80, 0x3F, 0x00, 0x00 },          // Code for char n
				{ 0x80, 0x0F, 0xC0, 0x1F, 0xE0, 0x38, 0x60, 0x30, 0x60, 0x30, 0x60, 0x30, 0x60, 0x30, 0xE0, 0x38, 0xC0, 0x1F, 0x80, 0x0F, 0x00, 0x00 },          // Code for char o
				{ 0xE0, 0xFF, 0xE0, 0xFF, 0x60, 0x0C, 0x60, 0x18, 0x60, 0x18, 0x60, 0x18, 0x60, 0x18, 0xE0, 0x1C, 0xC0, 0x0F, 0x80, 0x07, 0x00, 0x00 },          // Code for char p
				{ 0x80, 0x07, 0xC0, 0x0F, 0xE0, 0x1C, 0x60, 0x18, 0x60, 0x18, 0x60, 0x18, 0x60, 0x18, 0x60, 0x0C, 0xE0, 0xFF, 0xE0, 0xFF, 0x00, 0x00 },          // Code for char q
				{ 0x00, 0x00, 0xE0, 0x3F, 0xE0, 0x3F, 0xC0, 0x00, 0x60, 0x00, 0x60, 0x00, 0x60, 0x00, 0x60, 0x00, 0xE0, 0x00, 0xC0, 0x00, 0x00, 0x00 },          // Code for char r
				{ 0xC0, 0x11, 0xE0, 0x33, 0x60, 0x33, 0x60, 0x33, 0x60, 0x33, 0x60, 0x33, 0x60, 0x3F, 0x40, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },          // Code for char s
				{ 0x60, 0x00, 0x60, 0x00, 0xFE, 0x1F, 0xFE, 0x3F, 0x60, 0x30, 0x60, 0x30, 0x60, 0x30, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },          // Code for char t
				{ 0xE0, 0x0F, 0xE0, 0x1F, 0x00, 0x38, 0x00, 0x30, 0x00, 0x30, 0x00, 0x30, 0x00, 0x30, 0x00, 0x18, 0xE0, 0x3F, 0xE0, 0x3F, 0x00, 0x00 },          // Code for char u
				{ 0x60, 0x00, 0xE0, 0x01, 0x80, 0x07, 0x00, 0x1E, 0x00, 0x38, 0x00, 0x38, 0x00, 0x1E, 0x80, 0x07, 0xE0, 0x01, 0x60, 0x00, 0x00, 0x00 },          // Code for char v
				{ 0xE0, 0x07, 0xE0, 0x1F, 0x00, 0x38, 0x00, 0x1C, 0xE0, 0x0F, 0xE0, 0x0F, 0x00, 0x1C, 0x00, 0x38, 0xE0, 0x1F, 0xE0, 0x07, 0x00, 0x00 },          // Code for char w
				{ 0x60, 0x30, 0xE0, 0x38, 0xC0, 0x1D, 0x80, 0x0F, 0x00, 0x07, 0x80, 0x0F, 0xC0, 0x1D, 0xE0, 0x38, 0x60, 0x30, 0x00, 0x00, 0x00, 0x00 },          // Code for char x
				{ 0x00, 0x00, 0x60, 0x00, 0xE0, 0x81, 0x80, 0xE7, 0x00, 0x7E, 0x00, 0x1E, 0x80, 0x07, 0xE0, 0x01, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00 },          // Code for char y
				{ 0x60, 0x30, 0x60, 0x38, 0x60, 0x3C, 0x60, 0x36, 0x60, 0x33, 0xE0, 0x31, 0xE0, 0x30, 0x60, 0x30, 0x20, 0x30, 0x00, 0x00, 0x00, 0x00 },          // Code for char z
				{ 0x00, 0x00, 0x80, 0x00, 0xC0, 0x01, 0xFC, 0x1F, 0x7E, 0x3F, 0x07, 0x70, 0x03, 0x60, 0x03, 0x60, 0x03, 0x60, 0x00, 0x00, 0x00, 0x00 },          // Code for char {
				{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xBF, 0x3F, 0xBF, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },          // Code for char |
				{ 0x00, 0x00, 0x03, 0x60, 0x03, 0x60, 0x03, 0x60, 0x07, 0x70, 0x7E, 0x3F, 0xFC, 0x1F, 0xC0, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00 },          // Code for char }
				{ 0x10, 0x00, 0x18, 0x00, 0x0C, 0x00, 0x04, 0x00, 0x0C, 0x00, 0x18, 0x00, 0x10, 0x00, 0x18, 0x00, 0x0C, 0x00, 0x04, 0x00, 0x00, 0x00 },          // Code for char ~
				{ 0x00, 0x00, 0x18, 0x00, 0x3C, 0x00, 0x66, 0x00, 0x66, 0x00, 0x3C, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }          // Code for <Degrees>
			};

void Delay_MS(uint16_t dMS);
void Port_Init(void);
void SPI_MasterInit(void);
uint8_t SPI_MasterTransmit(unsigned char cByte);
void N5110_WriteByte(uint8_t cByte, uint8_t cCommand);
void N5110_Clear(void);
void N5110_Init(void);
void setPos(int pos);
void printChar(char ch);
void printWord(char *bString);
void N5110_RefreshRam(uint8_t *pcBuff);
void WaitMs(unsigned int ms);

void drawBox(void);
void gotoXY(int x, int y);
void printSmString(uint8_t x, uint8_t y, char *bString);
void printBigString(uint8_t x, uint8_t y, char *bString);

